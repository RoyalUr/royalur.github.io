memberSearchIndex = [{"p":"net.royalur.rules.state","c":"ActionGameState","l":"ActionGameState(Board<P>, S, S, PlayerType)","u":"%3Cinit%3E(net.royalur.model.Board,S,S,net.royalur.model.PlayerType)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleMoveList","l":"add(int)"},{"p":"net.royalur","c":"Game","l":"addState(GameState<P, S, R>)","u":"addState(net.royalur.rules.state.GameState)"},{"p":"net.royalur","c":"Game","l":"addStates(Iterable<GameState<P, S, R>>)","u":"addStates(java.lang.Iterable)"},{"p":"net.royalur.notation","c":"RGN","l":"appendDiceRoll(RuleSet<P, S, R>, StringBuilder, RolledGameState<P, S, R>)","u":"appendDiceRoll(net.royalur.rules.RuleSet,java.lang.StringBuilder,net.royalur.rules.state.RolledGameState)"},{"p":"net.royalur.notation","c":"RGN","l":"appendMove(RuleSet<P, S, R>, StringBuilder, MovedGameState<P, S, R>)","u":"appendMove(net.royalur.rules.RuleSet,java.lang.StringBuilder,net.royalur.rules.state.MovedGameState)"},{"p":"net.royalur.model","c":"Move","l":"apply(Board<P>)","u":"apply(net.royalur.model.Board)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"applyMove(int)"},{"p":"net.royalur.rules","c":"RuleSet","l":"applyMove(WaitingForMoveGameState<P, S, R>, Move<P>)","u":"applyMove(net.royalur.rules.state.WaitingForMoveGameState,net.royalur.model.Move)"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"applyMove(WaitingForMoveGameState<P, S, R>, Move<P>)","u":"applyMove(net.royalur.rules.state.WaitingForMoveGameState,net.royalur.model.Move)"},{"p":"net.royalur.rules.simple","c":"SimplePlayerStateProvider","l":"applyPieceCaptured(PlayerState, Piece)","u":"applyPieceCaptured(net.royalur.model.PlayerState,net.royalur.model.Piece)"},{"p":"net.royalur.rules","c":"PlayerStateProvider","l":"applyPieceCaptured(S, P)","u":"applyPieceCaptured(S,P)"},{"p":"net.royalur.rules.simple","c":"SimplePlayerStateProvider","l":"applyPieceIntroduced(PlayerState, Piece)","u":"applyPieceIntroduced(net.royalur.model.PlayerState,net.royalur.model.Piece)"},{"p":"net.royalur.rules","c":"PlayerStateProvider","l":"applyPieceIntroduced(S, P)","u":"applyPieceIntroduced(S,P)"},{"p":"net.royalur.rules.simple","c":"SimplePlayerStateProvider","l":"applyPieceScored(PlayerState, Piece)","u":"applyPieceScored(net.royalur.model.PlayerState,net.royalur.model.Piece)"},{"p":"net.royalur.rules","c":"PlayerStateProvider","l":"applyPieceScored(S, P)","u":"applyPieceScored(S,P)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"applyRoll(int, FastSimpleMoveList)","u":"applyRoll(int,net.royalur.rules.simple.fast.FastSimpleMoveList)"},{"p":"net.royalur.rules","c":"RuleSet","l":"applyRoll(WaitingForRollGameState<P, S, R>, R)","u":"applyRoll(net.royalur.rules.state.WaitingForRollGameState,R)"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"applyRoll(WaitingForRollGameState<P, S, R>, R)","u":"applyRoll(net.royalur.rules.state.WaitingForRollGameState,R)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"areRosettesSafe"},{"p":"net.royalur.model","c":"GameSettings","l":"areRosettesSafe()"},{"p":"net.royalur.rules","c":"RuleSet","l":"areRosettesSafe()"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"areRosettesSafe()"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"ArrayBuffer(int)","u":"%3Cinit%3E(int)"},{"p":"net.royalur.model.path","c":"PathType","l":"ASEB"},{"p":"net.royalur.model.shape","c":"BoardType","l":"ASEB"},{"p":"net.royalur.model","c":"GameSettings","l":"ASEB"},{"p":"net.royalur","c":"GameBuilder","l":"aseb()"},{"p":"net.royalur.model.shape","c":"AsebBoardShape","l":"AsebBoardShape()","u":"%3Cinit%3E()"},{"p":"net.royalur.model.path","c":"AsebPathPair","l":"AsebPathPair()","u":"%3Cinit%3E()"},{"p":"net.royalur.notation","c":"JsonNotation","l":"AVAILABLE_MOVES_KEY"},{"p":"net.royalur.agent","c":"BaseAgent","l":"BaseAgent()","u":"%3Cinit%3E()"},{"p":"net.royalur.model.path","c":"PathType","l":"BELL"},{"p":"net.royalur.model.path","c":"BellPathPair","l":"BellPathPair()","u":"%3Cinit%3E()"},{"p":"net.royalur.lut","c":"BigMap","l":"BigMap(ArrayBufferBuilder, ArrayBufferBuilder)","u":"%3Cinit%3E(net.royalur.lut.ArrayBufferBuilder,net.royalur.lut.ArrayBufferBuilder)"},{"p":"net.royalur.lut","c":"BigMap","l":"BigMap(ArrayBufferBuilder, ArrayBufferBuilder, int)","u":"%3Cinit%3E(net.royalur.lut.ArrayBufferBuilder,net.royalur.lut.ArrayBufferBuilder,int)"},{"p":"net.royalur.lut","c":"BigMap.BigMapIterator","l":"BigMapIterator()","u":"%3Cinit%3E()"},{"p":"net.royalur.model.dice","c":"BinaryDice","l":"BinaryDice(Name, RandomGenerator, int)","u":"%3Cinit%3E(net.royalur.name.Name,java.util.random.RandomGenerator,int)"},{"p":"net.royalur.model.dice","c":"BinaryDice0AsMax","l":"BinaryDice0AsMax(Name, RandomGenerator, int)","u":"%3Cinit%3E(net.royalur.name.Name,java.util.random.RandomGenerator,int)"},{"p":"net.royalur.model","c":"GameSettings","l":"BLITZ"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"board"},{"p":"net.royalur.notation","c":"JsonNotation","l":"BOARD_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"BOARD_PIECES_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"BOARD_SHAPE_KEY"},{"p":"net.royalur.model.shape","c":"AsebBoardShape","l":"BOARD_TILES"},{"p":"net.royalur.model.shape","c":"StandardBoardShape","l":"BOARD_TILES"},{"p":"net.royalur.model","c":"Board","l":"Board(Board<P>)","u":"%3Cinit%3E(net.royalur.model.Board)"},{"p":"net.royalur.model","c":"Board","l":"Board(BoardShape)","u":"%3Cinit%3E(net.royalur.model.shape.BoardShape)"},{"p":"net.royalur.rules","c":"RuleSet","l":"boardShape"},{"p":"net.royalur","c":"GameBuilder","l":"boardShape(BoardShape)","u":"boardShape(net.royalur.model.shape.BoardShape)"},{"p":"net.royalur","c":"GameBuilder","l":"boardShape(BoardType)","u":"boardShape(net.royalur.model.shape.BoardType)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"BoardShape(Name, Set<Tile>, Set<Tile>)","u":"%3Cinit%3E(net.royalur.name.Name,java.util.Set,java.util.Set)"},{"p":"net.royalur","c":"GameBuilder","l":"build()"},{"p":"net.royalur","c":"Game","l":"builder()"},{"p":"net.royalur","c":"GameBuilder","l":"buildRules()"},{"p":"net.royalur.lut","c":"BigMap","l":"BYTE"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"ByteArrayBuffer(int)","u":"%3Cinit%3E(int)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"calcTileIndex(int, int)","u":"calcTileIndex(int,int)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"CAPTURES_GRANT_EXTRA_ROLLS_KEY"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"capturesGrantExtraRoll"},{"p":"net.royalur","c":"GameBuilder","l":"capturesGrantExtraRolls(boolean)"},{"p":"net.royalur.util","c":"Cast","l":"Cast()","u":"%3Cinit%3E()"},{"p":"net.royalur.model","c":"Board","l":"clear()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"clear()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleMoveList","l":"clear()"},{"p":"net.royalur.lut","c":"StateLUT","l":"compress()"},{"p":"net.royalur.stats","c":"SummaryStat","l":"compute(double[])"},{"p":"net.royalur.model","c":"Board","l":"contains(Tile)","u":"contains(net.royalur.model.Tile)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"contains(Tile)","u":"contains(net.royalur.model.Tile)"},{"p":"net.royalur.model.shape","c":"StandardBoardShape","l":"contains(Tile)","u":"contains(net.royalur.model.Tile)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"containsAll(Collection<Tile>)","u":"containsAll(java.util.Collection)"},{"p":"net.royalur.model","c":"Board","l":"containsIndices(int, int)","u":"containsIndices(int,int)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"containsIndices(int, int)","u":"containsIndices(int,int)"},{"p":"net.royalur.model.shape","c":"StandardBoardShape","l":"containsIndices(int, int)","u":"containsIndices(int,int)"},{"p":"net.royalur","c":"Game","l":"copy()"},{"p":"net.royalur.model","c":"Board","l":"copy()"},{"p":"net.royalur.model","c":"GameMetadata","l":"copy()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"copyFrom(Board<? extends Piece>)","u":"copyFrom(net.royalur.model.Board)"},{"p":"net.royalur.model.dice","c":"Dice","l":"copyFrom(Dice<R>)","u":"copyFrom(net.royalur.model.dice.Dice)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"copyFrom(FastSimpleBoard)","u":"copyFrom(net.royalur.rules.simple.fast.FastSimpleBoard)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"copyFrom(FastSimpleGame)","u":"copyFrom(net.royalur.rules.simple.fast.FastSimpleGame)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimplePlayer","l":"copyFrom(FastSimplePlayer)","u":"copyFrom(net.royalur.rules.simple.fast.FastSimplePlayer)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"copyFrom(Game<? extends Piece, ? extends PlayerState, ? extends Roll>)","u":"copyFrom(net.royalur.Game)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimplePlayer","l":"copyFrom(PlayerState)","u":"copyFrom(net.royalur.model.PlayerState)"},{"p":"net.royalur.model","c":"Board","l":"countPieces(PlayerType)","u":"countPieces(net.royalur.model.PlayerType)"},{"p":"net.royalur.lut","c":"StateLUT","l":"countStates()"},{"p":"net.royalur","c":"Game","l":"create(GameSettings<R>)","u":"create(net.royalur.model.GameSettings)"},{"p":"net.royalur.rules","c":"RuleSetProvider","l":"create(GameSettings<R>, GameMetadata)","u":"create(net.royalur.model.GameSettings,net.royalur.model.GameMetadata)"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSetProvider","l":"create(GameSettings<R>, GameMetadata)","u":"create(net.royalur.model.GameSettings,net.royalur.model.GameMetadata)"},{"p":"net.royalur.lut","c":"ArrayBufferBuilder","l":"create(int)"},{"p":"net.royalur.rules","c":"PieceProvider","l":"create(PlayerType, int)","u":"create(net.royalur.model.PlayerType,int)"},{"p":"net.royalur.rules.simple","c":"SimplePieceProvider","l":"create(PlayerType, int)","u":"create(net.royalur.model.PlayerType,int)"},{"p":"net.royalur.rules","c":"PlayerStateProvider","l":"create(PlayerType, int, int)","u":"create(net.royalur.model.PlayerType,int,int)"},{"p":"net.royalur.rules.simple","c":"SimplePlayerStateProvider","l":"create(PlayerType, int, int)","u":"create(net.royalur.model.PlayerType,int,int)"},{"p":"net.royalur.model.path","c":"PathPair","l":"create(String, List<Tile>, List<Tile>)","u":"create(java.lang.String,java.util.List,java.util.List)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"create(String, Set<Tile>, Set<Tile>)","u":"create(java.lang.String,java.util.Set,java.util.Set)"},{"p":"net.royalur","c":"Game","l":"createAseb()"},{"p":"net.royalur.model.shape","c":"BoardShapeFactory","l":"createBoardShape()"},{"p":"net.royalur.model.shape","c":"BoardType","l":"createBoardShape()"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"createCompatibleFastGame()"},{"p":"net.royalur.model.dice","c":"DiceFactory","l":"createDice()"},{"p":"net.royalur.model.dice","c":"DiceType","l":"createDice()"},{"p":"net.royalur.model.dice","c":"DiceType","l":"createDice(RandomGenerator)","u":"createDice(java.util.random.RandomGenerator)"},{"p":"net.royalur.model.dice","c":"DiceType","l":"createFactory(Supplier<RandomGenerator>)","u":"createFactory(java.util.function.Supplier)"},{"p":"net.royalur","c":"Game","l":"createFinkel()"},{"p":"net.royalur.model","c":"GameMetadata","l":"createForNewGame(GameSettings<?>)","u":"createForNewGame(net.royalur.model.GameSettings)"},{"p":"net.royalur.rules","c":"PieceProvider","l":"createIntroduced(PlayerType, int)","u":"createIntroduced(net.royalur.model.PlayerType,int)"},{"p":"net.royalur.rules.simple","c":"SimplePieceProvider","l":"createIntroduced(PlayerType, int)","u":"createIntroduced(net.royalur.model.PlayerType,int)"},{"p":"net.royalur.model","c":"Tile","l":"createList(int...)"},{"p":"net.royalur","c":"Game","l":"createMasters()"},{"p":"net.royalur.rules","c":"PieceProvider","l":"createMoved(P, int)","u":"createMoved(P,int)"},{"p":"net.royalur.rules.simple","c":"SimplePieceProvider","l":"createMoved(Piece, int)","u":"createMoved(net.royalur.model.Piece,int)"},{"p":"net.royalur.notation","c":"DerivedStateSource","l":"createMovedState(RuleSet<P, S, R>, PlayerType, R, Move<P>)","u":"createMovedState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,R,net.royalur.model.Move)"},{"p":"net.royalur.notation","c":"FullStateSource","l":"createMovedState(RuleSet<P, S, R>, PlayerType, R, Move<P>)","u":"createMovedState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,R,net.royalur.model.Move)"},{"p":"net.royalur.notation","c":"StateSource","l":"createMovedState(RuleSet<P, S, R>, PlayerType, R, Move<P>)","u":"createMovedState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,R,net.royalur.model.Move)"},{"p":"net.royalur.model","c":"Tile","l":"createPath(int...)"},{"p":"net.royalur.model.path","c":"PathPairFactory","l":"createPathPair()"},{"p":"net.royalur.model.path","c":"PathType","l":"createPathPair()"},{"p":"net.royalur.model.dice","c":"DiceFactory","l":"createRoll(int)"},{"p":"net.royalur.notation","c":"DerivedStateSource","l":"createRolledState(RuleSet<P, S, R>, PlayerType, R)","u":"createRolledState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,R)"},{"p":"net.royalur.notation","c":"FullStateSource","l":"createRolledState(RuleSet<P, S, R>, PlayerType, R)","u":"createRolledState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,R)"},{"p":"net.royalur.notation","c":"StateSource","l":"createRolledState(RuleSet<P, S, R>, PlayerType, R)","u":"createRolledState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,R)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"createSimple()"},{"p":"net.royalur.rules","c":"RuleSet","l":"createSimple(GameSettings<R>)","u":"createSimple(net.royalur.model.GameSettings)"},{"p":"net.royalur.rules","c":"PlayerStateProvider","l":"createStartingState(PlayerType)","u":"createStartingState(net.royalur.model.PlayerType)"},{"p":"net.royalur.rules.simple","c":"SimplePlayerStateProvider","l":"createStartingState(PlayerType)","u":"createStartingState(net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"DerivedStateSource","l":"createWaitingForMoveState(RuleSet<P, S, R>, PlayerType, R)","u":"createWaitingForMoveState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,R)"},{"p":"net.royalur.notation","c":"FullStateSource","l":"createWaitingForMoveState(RuleSet<P, S, R>, PlayerType, R)","u":"createWaitingForMoveState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,R)"},{"p":"net.royalur.notation","c":"StateSource","l":"createWaitingForMoveState(RuleSet<P, S, R>, PlayerType, R)","u":"createWaitingForMoveState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,R)"},{"p":"net.royalur.notation","c":"DerivedStateSource","l":"createWaitingForRollState(RuleSet<P, S, R>, PlayerType)","u":"createWaitingForRollState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"FullStateSource","l":"createWaitingForRollState(RuleSet<P, S, R>, PlayerType)","u":"createWaitingForRollState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"StateSource","l":"createWaitingForRollState(RuleSet<P, S, R>, PlayerType)","u":"createWaitingForRollState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"DerivedStateSource","l":"createWinState(RuleSet<P, S, R>, PlayerType)","u":"createWinState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"FullStateSource","l":"createWinState(RuleSet<P, S, R>, PlayerType)","u":"createWinState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"StateSource","l":"createWinState(RuleSet<P, S, R>, PlayerType)","u":"createWinState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"dark"},{"p":"net.royalur.model","c":"PlayerType","l":"DARK"},{"p":"net.royalur.stats","c":"GameStatsTarget","l":"DARK"},{"p":"net.royalur.model.path","c":"AsebPathPair","l":"DARK_PATH"},{"p":"net.royalur.model.path","c":"BellPathPair","l":"DARK_PATH"},{"p":"net.royalur.model.path","c":"MastersPathPair","l":"DARK_PATH"},{"p":"net.royalur.model.path","c":"MurrayPathPair","l":"DARK_PATH"},{"p":"net.royalur.model.path","c":"SkiriukPathPair","l":"DARK_PATH"},{"p":"net.royalur.model","c":"GameMetadata","l":"DATETIME_FORMATTER"},{"p":"net.royalur.agent","c":"BaseAgent","l":"decideMove(Game<P, S, R>, List<Move<P>>)","u":"decideMove(net.royalur.Game,java.util.List)"},{"p":"net.royalur.agent","c":"DeterministicAgent","l":"decideMove(Game<P, S, R>, List<Move<P>>)","u":"decideMove(net.royalur.Game,java.util.List)"},{"p":"net.royalur.agent","c":"LikelihoodAgent","l":"decideMove(Game<P, S, R>, List<Move<P>>)","u":"decideMove(net.royalur.Game,java.util.List)"},{"p":"net.royalur.agent","c":"RandomAgent","l":"decideMove(Game<P, S, R>, List<Move<P>>)","u":"decideMove(net.royalur.Game,java.util.List)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"decodeGame(String)","u":"decodeGame(java.lang.String)"},{"p":"net.royalur.notation","c":"Notation","l":"decodeGame(String)","u":"decodeGame(java.lang.String)"},{"p":"net.royalur.notation","c":"RGN","l":"decodeGame(String)","u":"decodeGame(java.lang.String)"},{"p":"net.royalur.lut","c":"BigMap","l":"DEFAULT_ENTRIES_PER_CHUNK"},{"p":"net.royalur.notation","c":"RGN","l":"DEFAULT_MAX_ACTION_LINE_LENGTH"},{"p":"net.royalur.notation","c":"RGN","l":"DEFAULT_MAX_TURN_LINE_LENGTH"},{"p":"net.royalur.notation","c":"DerivedStateSource","l":"DerivedStateSource(GameState<P, S, R>)","u":"%3Cinit%3E(net.royalur.rules.state.GameState)"},{"p":"net.royalur.model","c":"Move","l":"describe()"},{"p":"net.royalur.rules.state","c":"GameState","l":"describe()"},{"p":"net.royalur.rules.state","c":"MovedGameState","l":"describe()"},{"p":"net.royalur.rules.state","c":"RolledGameState","l":"describe()"},{"p":"net.royalur.rules.state","c":"WaitingForMoveGameState","l":"describe()"},{"p":"net.royalur.rules.state","c":"WaitingForRollGameState","l":"describe()"},{"p":"net.royalur.rules.state","c":"WinGameState","l":"describe()"},{"p":"net.royalur.agent","c":"DeterministicAgent","l":"DeterministicAgent()","u":"%3Cinit%3E()"},{"p":"net.royalur.notation","c":"JsonNotation","l":"DICE_KEY"},{"p":"net.royalur","c":"GameBuilder","l":"dice(DiceFactory<NEW_R>)","u":"dice(net.royalur.model.dice.DiceFactory)"},{"p":"net.royalur.model.dice","c":"Dice","l":"Dice(Name)","u":"%3Cinit%3E(net.royalur.name.Name)"},{"p":"net.royalur.rules","c":"RuleSet","l":"diceFactory"},{"p":"net.royalur.stats","c":"GameStats","l":"didLightWin()"},{"p":"net.royalur.model","c":"GameSettings","l":"doCapturesGrantExtraRolls()"},{"p":"net.royalur.rules","c":"RuleSet","l":"doCapturesGrantExtraRolls()"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"doCapturesGrantExtraRolls()"},{"p":"net.royalur.model","c":"GameSettings","l":"doRosettesGrantExtraRolls()"},{"p":"net.royalur.rules","c":"RuleSet","l":"doRosettesGrantExtraRolls()"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"doRosettesGrantExtraRolls()"},{"p":"net.royalur.lut","c":"FinkelGameEncoding","l":"encode(FastSimpleGame)","u":"encode(net.royalur.rules.simple.fast.FastSimpleGame)"},{"p":"net.royalur.lut","c":"GameEncoding","l":"encodeGame(FastSimpleGame)","u":"encodeGame(net.royalur.rules.simple.fast.FastSimpleGame)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"encodeGame(Game<P, S, R>)","u":"encodeGame(net.royalur.Game)"},{"p":"net.royalur.notation","c":"Notation","l":"encodeGame(Game<P, S, R>)","u":"encodeGame(net.royalur.Game)"},{"p":"net.royalur.notation","c":"RGN","l":"encodeGame(Game<P, S, R>)","u":"encodeGame(net.royalur.Game)"},{"p":"net.royalur.model","c":"Tile","l":"encodeX(StringBuilder)","u":"encodeX(java.lang.StringBuilder)"},{"p":"net.royalur.model","c":"Tile","l":"encodeXLowerCase(StringBuilder)","u":"encodeXLowerCase(java.lang.StringBuilder)"},{"p":"net.royalur.model","c":"Tile","l":"encodeY(StringBuilder)","u":"encodeY(java.lang.StringBuilder)"},{"p":"net.royalur.model","c":"GameMetadata","l":"END_DATETIME_KEY"},{"p":"net.royalur.name","c":"NameMap","l":"entries()"},{"p":"net.royalur.name","c":"UniqueNameMap","l":"entries()"},{"p":"net.royalur.name","c":"UnmodifiableNameMap","l":"entries()"},{"p":"net.royalur.lut","c":"BigMap.Entry","l":"Entry()","u":"%3Cinit%3E()"},{"p":"net.royalur.name","c":"NameMap.Entry","l":"Entry(N, T)","u":"%3Cinit%3E(N,T)"},{"p":"net.royalur.model","c":"Board","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.model","c":"GameMetadata","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.model","c":"GameSettings","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.model","c":"Move","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.model.path","c":"PathPair","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.model","c":"Piece","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.model","c":"PlayerState","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.model","c":"Tile","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.royalur.notation","c":"RGN","l":"escape(String)","u":"escape(java.lang.String)"},{"p":"net.royalur.model.dice","c":"DiceType","l":"FACTORIES"},{"p":"net.royalur.model.path","c":"PathType","l":"FACTORIES"},{"p":"net.royalur.model.shape","c":"BoardType","l":"FACTORIES"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"FastSimpleBoard(BoardShape)","u":"%3Cinit%3E(net.royalur.model.shape.BoardShape)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"FastSimpleGame(GameSettings<?>)","u":"%3Cinit%3E(net.royalur.model.GameSettings)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleMoveList","l":"FastSimpleMoveList()","u":"%3Cinit%3E()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleMoveList","l":"FastSimpleMoveList(int)","u":"%3Cinit%3E(int)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimplePlayer","l":"FastSimplePlayer(int[], boolean)","u":"%3Cinit%3E(int[],boolean)"},{"p":"net.royalur","c":"Game","l":"findAvailableMoves()"},{"p":"net.royalur.rules","c":"RuleSet","l":"findAvailableMoves(Board<P>, S, R)","u":"findAvailableMoves(net.royalur.model.Board,S,R)"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"findAvailableMoves(Board<P>, S, R)","u":"findAvailableMoves(net.royalur.model.Board,S,R)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"findAvailableMoves(FastSimpleMoveList)","u":"findAvailableMoves(net.royalur.rules.simple.fast.FastSimpleMoveList)"},{"p":"net.royalur.model","c":"GameSettings","l":"FINKEL"},{"p":"net.royalur","c":"GameBuilder","l":"finkel()"},{"p":"net.royalur.lut","c":"FinkelGameEncoding","l":"FinkelGameEncoding(int)","u":"%3Cinit%3E(int)"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"FOUR"},{"p":"net.royalur.model.dice","c":"DiceType","l":"FOUR_BINARY"},{"p":"net.royalur.model","c":"Tile","l":"fromIndices(int, int)","u":"fromIndices(int,int)"},{"p":"net.royalur.model","c":"Tile","l":"fromString(String)","u":"fromString(java.lang.String)"},{"p":"net.royalur.notation","c":"FullStateSource","l":"FullStateSource(Board<P>, S, S)","u":"%3Cinit%3E(net.royalur.model.Board,S,S)"},{"p":"net.royalur","c":"Game","l":"Game(Game<P, S, R>)","u":"%3Cinit%3E(net.royalur.Game)"},{"p":"net.royalur","c":"Game","l":"Game(RuleSet<P, S, R>)","u":"%3Cinit%3E(net.royalur.rules.RuleSet)"},{"p":"net.royalur","c":"Game","l":"Game(RuleSet<P, S, R>, GameMetadata, List<GameState<P, S, R>>)","u":"%3Cinit%3E(net.royalur.rules.RuleSet,net.royalur.model.GameMetadata,java.util.List)"},{"p":"net.royalur","c":"GameBuilder","l":"GameBuilder(GameSettings<R>, RuleSetProvider<P, S>)","u":"%3Cinit%3E(net.royalur.model.GameSettings,net.royalur.rules.RuleSetProvider)"},{"p":"net.royalur.lut","c":"GameEncoding","l":"GameEncoding()","u":"%3Cinit%3E()"},{"p":"net.royalur.model","c":"GameMetadata","l":"GameMetadata()","u":"%3Cinit%3E()"},{"p":"net.royalur.model","c":"GameMetadata","l":"GameMetadata(Map<String, String>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"net.royalur.model","c":"GameSettings","l":"GameSettings(BoardShape, PathPair, DiceFactory<R>, int, boolean, boolean, boolean)","u":"%3Cinit%3E(net.royalur.model.shape.BoardShape,net.royalur.model.path.PathPair,net.royalur.model.dice.DiceFactory,int,boolean,boolean,boolean)"},{"p":"net.royalur.rules.state","c":"GameState","l":"GameState(Board<P>, S, S)","u":"%3Cinit%3E(net.royalur.model.Board,S,S)"},{"p":"net.royalur.stats","c":"GameStats","l":"GameStats(boolean, int[], int[], int[], int[], int)","u":"%3Cinit%3E(boolean,int[],int[],int[],int[],int)"},{"p":"net.royalur.stats","c":"GameStatsSummary","l":"GameStatsSummary(double[][], double[][], double[][], double[][], double[], double[])","u":"%3Cinit%3E(double[][],double[][],double[][],double[][],double[],double[])"},{"p":"net.royalur.stats","c":"GameStats","l":"gather(Game<?, ?, ?>)","u":"gather(net.royalur.Game)"},{"p":"net.royalur.rules","c":"RuleSet","l":"generateInitialGameState()"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"generateInitialGameState()"},{"p":"net.royalur.model.dice","c":"BinaryDice","l":"generateRoll(int)"},{"p":"net.royalur.model.dice","c":"BinaryDice0AsMax","l":"generateRoll(int)"},{"p":"net.royalur.model.dice","c":"Dice","l":"generateRoll(int)"},{"p":"net.royalur.name","c":"NameMap","l":"get(int)"},{"p":"net.royalur.name","c":"UniqueNameMap","l":"get(int)"},{"p":"net.royalur.name","c":"UnmodifiableNameMap","l":"get(int)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"get(int)"},{"p":"net.royalur.name","c":"NameMap","l":"get(N)"},{"p":"net.royalur.name","c":"UniqueNameMap","l":"get(N)"},{"p":"net.royalur.name","c":"UnmodifiableNameMap","l":"get(N)"},{"p":"net.royalur.model.path","c":"PathPair","l":"get(PlayerType)","u":"get(net.royalur.model.PlayerType)"},{"p":"net.royalur.stats","c":"GameStatsTarget","l":"get(PlayerType)","u":"get(net.royalur.model.PlayerType)"},{"p":"net.royalur.model","c":"GameMetadata","l":"get(String)","u":"get(java.lang.String)"},{"p":"net.royalur.name","c":"NameMap","l":"get(String)","u":"get(java.lang.String)"},{"p":"net.royalur.name","c":"UniqueNameMap","l":"get(String)","u":"get(java.lang.String)"},{"p":"net.royalur.name","c":"UnmodifiableNameMap","l":"get(String)","u":"get(java.lang.String)"},{"p":"net.royalur.model","c":"Board","l":"get(Tile)","u":"get(net.royalur.model.Tile)"},{"p":"net.royalur","c":"Game","l":"getActionStates()"},{"p":"net.royalur.model","c":"GameMetadata","l":"getAll()"},{"p":"net.royalur.notation","c":"DerivedStateSource","l":"getAllStates()"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"getArea()"},{"p":"net.royalur.stats","c":"GameStatsTarget","l":"getAssociatedPlayer()"},{"p":"net.royalur.rules.state","c":"RolledGameState","l":"getAvailableMoves()"},{"p":"net.royalur.rules.state","c":"WaitingForMoveGameState","l":"getAvailableMoves()"},{"p":"net.royalur","c":"Game","l":"getBoard()"},{"p":"net.royalur.rules.state","c":"GameState","l":"getBoard()"},{"p":"net.royalur.model","c":"GameSettings","l":"getBoardShape()"},{"p":"net.royalur.rules","c":"RuleSet","l":"getBoardShape()"},{"p":"net.royalur.model","c":"PlayerType","l":"getByChar(char)"},{"p":"net.royalur.model","c":"Board","l":"getByIndices(int, int)","u":"getByIndices(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"getByte(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"getByte(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"getByte(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"getByte(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"getByte(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"getCapacity()"},{"p":"net.royalur.model","c":"Move","l":"getCapturedPiece()"},{"p":"net.royalur.model","c":"Move","l":"getCapturedPieceOrNull()"},{"p":"net.royalur.model","c":"PlayerType","l":"getChar()"},{"p":"net.royalur.model","c":"PlayerType","l":"getCharStr()"},{"p":"net.royalur","c":"Game","l":"getCurrentPlayableState()"},{"p":"net.royalur","c":"Game","l":"getCurrentState()"},{"p":"net.royalur","c":"Game","l":"getCurrentWaitingForMoveState()"},{"p":"net.royalur","c":"Game","l":"getCurrentWaitingForRollState()"},{"p":"net.royalur","c":"Game","l":"getCurrentWinState()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getDark()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getDarkEnd()"},{"p":"net.royalur","c":"Game","l":"getDarkPlayer()"},{"p":"net.royalur.rules.state","c":"GameState","l":"getDarkPlayer()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getDarkStart()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getDarkWithStartEnd()"},{"p":"net.royalur.model","c":"Move","l":"getDest()"},{"p":"net.royalur.model","c":"Move","l":"getDest(PathPair)","u":"getDest(net.royalur.model.path.PathPair)"},{"p":"net.royalur.model","c":"Move","l":"getDestOrNull()"},{"p":"net.royalur.model","c":"Move","l":"getDestPiece()"},{"p":"net.royalur.model","c":"Move","l":"getDestPieceOrNull()"},{"p":"net.royalur","c":"Game","l":"getDice()"},{"p":"net.royalur.model","c":"GameSettings","l":"getDice()"},{"p":"net.royalur.rules","c":"RuleSet","l":"getDiceFactory()"},{"p":"net.royalur.stats","c":"GameStats","l":"getDrama(GameStatsTarget)","u":"getDrama(net.royalur.stats.GameStatsTarget)"},{"p":"net.royalur.stats","c":"GameStats","l":"getDrama(PlayerType)","u":"getDrama(net.royalur.model.PlayerType)"},{"p":"net.royalur.stats","c":"GameStatsSummary","l":"getDramaStatistic(GameStatsTarget, SummaryStat)","u":"getDramaStatistic(net.royalur.stats.GameStatsTarget,net.royalur.stats.SummaryStat)"},{"p":"net.royalur.model.path","c":"PathPair","l":"getEnd(PlayerType)","u":"getEnd(net.royalur.model.PlayerType)"},{"p":"net.royalur.model","c":"GameMetadata","l":"getEndTime()"},{"p":"net.royalur.lut","c":"BigMap","l":"getEntryCount()"},{"p":"net.royalur.model","c":"Board","l":"getHeight()"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"getHeight()"},{"p":"net.royalur.model.dice","c":"DiceType","l":"getID()"},{"p":"net.royalur.model.path","c":"PathType","l":"getID()"},{"p":"net.royalur.model","c":"PlayerType","l":"getID()"},{"p":"net.royalur.model.shape","c":"BoardType","l":"getID()"},{"p":"net.royalur.name","c":"Name","l":"getID()"},{"p":"net.royalur.name","c":"TextName","l":"getID()"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"getInt(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"getInt(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"getInt(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"getInt(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"getInt(int)"},{"p":"net.royalur.lut","c":"BigMap","l":"getInt(int)"},{"p":"net.royalur.lut","c":"BigMap","l":"getInt(long)"},{"p":"net.royalur","c":"Game","l":"getLandmarkStates()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getLight()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getLightEnd()"},{"p":"net.royalur","c":"Game","l":"getLightPlayer()"},{"p":"net.royalur.rules.state","c":"GameState","l":"getLightPlayer()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getLightStart()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getLightWithStartEnd()"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"getLong(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"getLong(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"getLong(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"getLong(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"getLong(int)"},{"p":"net.royalur.lut","c":"BigMap","l":"getLong(int)"},{"p":"net.royalur.lut","c":"BigMap","l":"getLong(long)"},{"p":"net.royalur","c":"Game","l":"getLoser()"},{"p":"net.royalur.rules.state","c":"WinGameState","l":"getLoser()"},{"p":"net.royalur","c":"Game","l":"getLosingPlayer()"},{"p":"net.royalur.rules.state","c":"WinGameState","l":"getLosingPlayer()"},{"p":"net.royalur.model.dice","c":"BinaryDice","l":"getMaxRollValue()"},{"p":"net.royalur.model.dice","c":"BinaryDice0AsMax","l":"getMaxRollValue()"},{"p":"net.royalur.model.dice","c":"Dice","l":"getMaxRollValue()"},{"p":"net.royalur","c":"Game","l":"getMetadata()"},{"p":"net.royalur.rules.state","c":"MovedGameState","l":"getMove()"},{"p":"net.royalur.stats","c":"GameStats","l":"getMoves(GameStatsTarget)","u":"getMoves(net.royalur.stats.GameStatsTarget)"},{"p":"net.royalur.stats","c":"GameStats","l":"getMoves(PlayerType)","u":"getMoves(net.royalur.model.PlayerType)"},{"p":"net.royalur.stats","c":"GameStatsSummary","l":"getMovesStatistic(GameStatsTarget, SummaryStat)","u":"getMovesStatistic(net.royalur.stats.GameStatsTarget,net.royalur.stats.SummaryStat)"},{"p":"net.royalur.agent.utility","c":"UtilityFunction","l":"getName()"},{"p":"net.royalur.model.dice","c":"Dice","l":"getName()"},{"p":"net.royalur.model.dice","c":"DiceType","l":"getName()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getName()"},{"p":"net.royalur.model.path","c":"PathType","l":"getName()"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"getName()"},{"p":"net.royalur.model.shape","c":"BoardType","l":"getName()"},{"p":"net.royalur.name","c":"Named","l":"getName()"},{"p":"net.royalur.name","c":"NameMap.Entry","l":"getName()"},{"p":"net.royalur.stats","c":"GameStatsTarget","l":"getName()"},{"p":"net.royalur.model","c":"PlayerType","l":"getOtherPlayer()"},{"p":"net.royalur.model","c":"Piece","l":"getOwner()"},{"p":"net.royalur.model","c":"Piece","l":"getPathIndex()"},{"p":"net.royalur.model","c":"GameSettings","l":"getPaths()"},{"p":"net.royalur.rules","c":"RuleSet","l":"getPaths()"},{"p":"net.royalur.stats","c":"GameStats","l":"getPercentInLead()"},{"p":"net.royalur.stats","c":"GameStatsSummary","l":"getPercentInLeadStatistic(SummaryStat)","u":"getPercentInLeadStatistic(net.royalur.stats.SummaryStat)"},{"p":"net.royalur.model","c":"PlayerState","l":"getPieceCount()"},{"p":"net.royalur.rules","c":"RuleSet","l":"getPieceProvider()"},{"p":"net.royalur.model","c":"Move","l":"getPlayer()"},{"p":"net.royalur.model","c":"PlayerState","l":"getPlayer()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"getPlayer(boolean)"},{"p":"net.royalur","c":"Game","l":"getPlayer(PlayerType)","u":"getPlayer(net.royalur.model.PlayerType)"},{"p":"net.royalur.rules.state","c":"GameState","l":"getPlayer(PlayerType)","u":"getPlayer(net.royalur.model.PlayerType)"},{"p":"net.royalur.rules","c":"RuleSet","l":"getPlayerStateProvider()"},{"p":"net.royalur","c":"Game","l":"getRoll()"},{"p":"net.royalur.rules.state","c":"MovedGameState","l":"getRoll()"},{"p":"net.royalur.rules.state","c":"RolledGameState","l":"getRoll()"},{"p":"net.royalur.rules.state","c":"WaitingForMoveGameState","l":"getRoll()"},{"p":"net.royalur.model.dice","c":"BinaryDice","l":"getRollProbabilities()"},{"p":"net.royalur.model.dice","c":"BinaryDice0AsMax","l":"getRollProbabilities()"},{"p":"net.royalur.model.dice","c":"Dice","l":"getRollProbabilities()"},{"p":"net.royalur.stats","c":"GameStats","l":"getRolls(GameStatsTarget)","u":"getRolls(net.royalur.stats.GameStatsTarget)"},{"p":"net.royalur.stats","c":"GameStats","l":"getRolls(PlayerType)","u":"getRolls(net.royalur.model.PlayerType)"},{"p":"net.royalur.stats","c":"GameStatsSummary","l":"getRollsStatistic(GameStatsTarget, SummaryStat)","u":"getRollsStatistic(net.royalur.stats.GameStatsTarget,net.royalur.stats.SummaryStat)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"getRosetteTiles()"},{"p":"net.royalur","c":"Game","l":"getRules()"},{"p":"net.royalur","c":"GameBuilder","l":"getRuleSetProvider()"},{"p":"net.royalur.model","c":"PlayerState","l":"getScore()"},{"p":"net.royalur","c":"GameBuilder","l":"getSettings()"},{"p":"net.royalur.rules","c":"RuleSet","l":"getSettings()"},{"p":"net.royalur.model","c":"Board","l":"getShape()"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"getShort(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"getShort(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"getShort(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"getShort(int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"getShort(int)"},{"p":"net.royalur.model","c":"Move","l":"getSource()"},{"p":"net.royalur.model","c":"Move","l":"getSource(PathPair)","u":"getSource(net.royalur.model.path.PathPair)"},{"p":"net.royalur.model","c":"Move","l":"getSourceOrNull()"},{"p":"net.royalur.model","c":"Move","l":"getSourcePiece()"},{"p":"net.royalur.model","c":"Move","l":"getSourcePieceOrNull()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getStart(PlayerType)","u":"getStart(net.royalur.model.PlayerType)"},{"p":"net.royalur.model","c":"GameSettings","l":"getStartingPieceCount()"},{"p":"net.royalur.rules","c":"PlayerStateProvider","l":"getStartingPieceCount()"},{"p":"net.royalur.rules.simple","c":"SimplePlayerStateProvider","l":"getStartingPieceCount()"},{"p":"net.royalur.model","c":"GameMetadata","l":"getStartTime()"},{"p":"net.royalur","c":"Game","l":"getStates()"},{"p":"net.royalur.notation","c":"JsonNotation","l":"getStateType(GameState<P, S, R>)","u":"getStateType(net.royalur.rules.state.GameState)"},{"p":"net.royalur.model.dice","c":"DiceType","l":"getTextName()"},{"p":"net.royalur.model.path","c":"PathType","l":"getTextName()"},{"p":"net.royalur.model","c":"PlayerType","l":"getTextName()"},{"p":"net.royalur.model.shape","c":"BoardType","l":"getTextName()"},{"p":"net.royalur.name","c":"Name","l":"getTextName()"},{"p":"net.royalur.name","c":"TextName","l":"getTextName()"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"getTiles()"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"getTilesByColumn()"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"getTilesByRow()"},{"p":"net.royalur.stats","c":"GameStats","l":"getTotalDrama()"},{"p":"net.royalur.stats","c":"GameStats","l":"getTotalMoves()"},{"p":"net.royalur.stats","c":"GameStats","l":"getTotalRolls()"},{"p":"net.royalur.stats","c":"GameStats","l":"getTotalTurns()"},{"p":"net.royalur","c":"Game","l":"getTurn()"},{"p":"net.royalur.rules.state","c":"OngoingGameState","l":"getTurn()"},{"p":"net.royalur","c":"Game","l":"getTurnOrWinner()"},{"p":"net.royalur","c":"Game","l":"getTurnPlayer()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"getTurnPlayer()"},{"p":"net.royalur.rules.state","c":"OngoingGameState","l":"getTurnPlayer()"},{"p":"net.royalur.stats","c":"GameStats","l":"getTurns(GameStatsTarget)","u":"getTurns(net.royalur.stats.GameStatsTarget)"},{"p":"net.royalur.stats","c":"GameStats","l":"getTurns(PlayerType)","u":"getTurns(net.royalur.model.PlayerType)"},{"p":"net.royalur.stats","c":"GameStats","l":"getTurnsInLead()"},{"p":"net.royalur.stats","c":"GameStatsSummary","l":"getTurnsInLeadStatistic(SummaryStat)","u":"getTurnsInLeadStatistic(net.royalur.stats.SummaryStat)"},{"p":"net.royalur.stats","c":"GameStatsSummary","l":"getTurnsStatistic(GameStatsTarget, SummaryStat)","u":"getTurnsStatistic(net.royalur.stats.GameStatsTarget,net.royalur.stats.SummaryStat)"},{"p":"net.royalur.name","c":"NameMap.Entry","l":"getValue()"},{"p":"net.royalur.rules.state","c":"OngoingGameState","l":"getWaiting()"},{"p":"net.royalur","c":"Game","l":"getWaitingPlayer()"},{"p":"net.royalur.rules.state","c":"OngoingGameState","l":"getWaitingPlayer()"},{"p":"net.royalur.model","c":"Board","l":"getWidth()"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"getWidth()"},{"p":"net.royalur","c":"Game","l":"getWinner()"},{"p":"net.royalur.rules.state","c":"WinGameState","l":"getWinner()"},{"p":"net.royalur","c":"Game","l":"getWinningPlayer()"},{"p":"net.royalur.rules.state","c":"WinGameState","l":"getWinningPlayer()"},{"p":"net.royalur.model.path","c":"PathPair","l":"getWithStartEnd(PlayerType)","u":"getWithStartEnd(net.royalur.model.PlayerType)"},{"p":"net.royalur.model","c":"Tile","l":"getX()"},{"p":"net.royalur.model","c":"Tile","l":"getXIndex()"},{"p":"net.royalur.model","c":"Tile","l":"getY()"},{"p":"net.royalur.model","c":"Tile","l":"getYIndex()"},{"p":"net.royalur.stats","c":"GameStatsTarget","l":"hasAssociatedPlayer()"},{"p":"net.royalur.model","c":"Move","l":"hasDest()"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"hashCode()"},{"p":"net.royalur.model","c":"Move","l":"hashCode()"},{"p":"net.royalur.model","c":"Piece","l":"hashCode()"},{"p":"net.royalur.model","c":"PlayerState","l":"hashCode()"},{"p":"net.royalur.model","c":"Tile","l":"hashCode()"},{"p":"net.royalur.model.dice","c":"DiceType","l":"hasID()"},{"p":"net.royalur.model.path","c":"PathType","l":"hasID()"},{"p":"net.royalur.model","c":"PlayerType","l":"hasID()"},{"p":"net.royalur.model.shape","c":"BoardType","l":"hasID()"},{"p":"net.royalur.name","c":"Name","l":"hasID()"},{"p":"net.royalur.name","c":"TextName","l":"hasID()"},{"p":"net.royalur.lut","c":"BigMap.BigMapIterator","l":"hasNext()"},{"p":"net.royalur.model","c":"Move","l":"hasSource()"},{"p":"net.royalur.model.dice","c":"Dice","l":"hasState()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"height"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"indexOf(byte, int, int)","u":"indexOf(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"indexOf(byte, int, int)","u":"indexOf(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"indexOf(byte, int, int)","u":"indexOf(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"indexOf(byte, int, int)","u":"indexOf(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"indexOf(byte, int, int)","u":"indexOf(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"indexOf(int, int, int)","u":"indexOf(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"indexOf(int, int, int)","u":"indexOf(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"indexOf(int, int, int)","u":"indexOf(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"indexOf(int, int, int)","u":"indexOf(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"indexOf(int, int, int)","u":"indexOf(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"indexOf(long, int, int)","u":"indexOf(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"indexOf(long, int, int)","u":"indexOf(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"indexOf(long, int, int)","u":"indexOf(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"indexOf(long, int, int)","u":"indexOf(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"indexOf(long, int, int)","u":"indexOf(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"indexOf(short, int, int)","u":"indexOf(short,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"indexOf(short, int, int)","u":"indexOf(short,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"indexOf(short, int, int)","u":"indexOf(short,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"indexOf(short, int, int)","u":"indexOf(short,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"indexOf(short, int, int)","u":"indexOf(short,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"indexOfBinarySearch(byte, int, int)","u":"indexOfBinarySearch(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"indexOfBinarySearch(byte, int, int)","u":"indexOfBinarySearch(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"indexOfBinarySearch(byte, int, int)","u":"indexOfBinarySearch(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"indexOfBinarySearch(byte, int, int)","u":"indexOfBinarySearch(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"indexOfBinarySearch(byte, int, int)","u":"indexOfBinarySearch(byte,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"indexOfBinarySearch(int, int, int)","u":"indexOfBinarySearch(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"indexOfBinarySearch(int, int, int)","u":"indexOfBinarySearch(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"indexOfBinarySearch(int, int, int)","u":"indexOfBinarySearch(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"indexOfBinarySearch(int, int, int)","u":"indexOfBinarySearch(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"indexOfBinarySearch(int, int, int)","u":"indexOfBinarySearch(int,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"indexOfBinarySearch(long, int, int)","u":"indexOfBinarySearch(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"indexOfBinarySearch(long, int, int)","u":"indexOfBinarySearch(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"indexOfBinarySearch(long, int, int)","u":"indexOfBinarySearch(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"indexOfBinarySearch(long, int, int)","u":"indexOfBinarySearch(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"indexOfBinarySearch(long, int, int)","u":"indexOfBinarySearch(long,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"indexOfBinarySearch(short, int, int)","u":"indexOfBinarySearch(short,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"indexOfBinarySearch(short, int, int)","u":"indexOfBinarySearch(short,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"indexOfBinarySearch(short, int, int)","u":"indexOfBinarySearch(short,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"indexOfBinarySearch(short, int, int)","u":"indexOfBinarySearch(short,int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"indexOfBinarySearch(short, int, int)","u":"indexOfBinarySearch(short,int,int)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"INITIAL_STATE_KEY"},{"p":"net.royalur.model","c":"GameMetadata","l":"initialiseForNewGame(GameSettings<?>)","u":"initialiseForNewGame(net.royalur.model.GameSettings)"},{"p":"net.royalur.lut","c":"BigMap","l":"INT"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"IntArrayBuffer(int)","u":"%3Cinit%3E(int)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"isActionStateType(String)","u":"isActionStateType(java.lang.String)"},{"p":"net.royalur.model","c":"Move","l":"isCapture()"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"isCompatible(PathPair)","u":"isCompatible(net.royalur.model.path.PathPair)"},{"p":"net.royalur.model","c":"Move","l":"isDestRosette(BoardShape)","u":"isDestRosette(net.royalur.model.shape.BoardShape)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"isEquivalent(BoardShape)","u":"isEquivalent(net.royalur.model.shape.BoardShape)"},{"p":"net.royalur.model.path","c":"PathPair","l":"isEquivalent(PathPair)","u":"isEquivalent(net.royalur.model.path.PathPair)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"isFinished"},{"p":"net.royalur","c":"Game","l":"isFinished()"},{"p":"net.royalur.rules.state","c":"GameState","l":"isFinished()"},{"p":"net.royalur.rules.state","c":"OngoingGameState","l":"isFinished()"},{"p":"net.royalur.rules.state","c":"WinGameState","l":"isFinished()"},{"p":"net.royalur.model","c":"Move","l":"isIntroducingPiece()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimplePlayer","l":"isLight"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"isLightTurn"},{"p":"net.royalur.notation","c":"JsonNotation","l":"isOngoingGameState(String)","u":"isOngoingGameState(java.lang.String)"},{"p":"net.royalur","c":"Game","l":"isPlayable()"},{"p":"net.royalur.rules.state","c":"ActionGameState","l":"isPlayable()"},{"p":"net.royalur.rules.state","c":"GameState","l":"isPlayable()"},{"p":"net.royalur.rules.state","c":"PlayableGameState","l":"isPlayable()"},{"p":"net.royalur.rules.state","c":"WinGameState","l":"isPlayable()"},{"p":"net.royalur.notation","c":"JsonNotation","l":"isPlayableGameState(String)","u":"isPlayableGameState(java.lang.String)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"isRosette(Tile)","u":"isRosette(net.royalur.model.Tile)"},{"p":"net.royalur.model.shape","c":"StandardBoardShape","l":"isRosette(Tile)","u":"isRosette(net.royalur.model.Tile)"},{"p":"net.royalur.model.shape","c":"BoardShape","l":"isRosetteIndices(int, int)","u":"isRosetteIndices(int,int)"},{"p":"net.royalur.model.shape","c":"StandardBoardShape","l":"isRosetteIndices(int, int)","u":"isRosetteIndices(int,int)"},{"p":"net.royalur.model","c":"Move","l":"isScoringPiece()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"isTileRosette(int)"},{"p":"net.royalur","c":"Game","l":"isWaitingForMove()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"isWaitingForMove()"},{"p":"net.royalur","c":"Game","l":"isWaitingForRoll()"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"isWaitingForRoll()"},{"p":"net.royalur.lut","c":"BigMap","l":"iterator()"},{"p":"net.royalur.notation","c":"JsonHelper","l":"JsonHelper()","u":"%3Cinit%3E()"},{"p":"net.royalur.notation","c":"JsonHelper.JsonKeyError","l":"JsonKeyError(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"JsonNotation(NameMap<?, ? extends BoardShapeFactory>, NameMap<?, ? extends PathPairFactory>, NameMap<?, ? extends DiceFactory<R>>, RuleSetProvider<P, S>)","u":"%3Cinit%3E(net.royalur.name.NameMap,net.royalur.name.NameMap,net.royalur.name.NameMap,net.royalur.rules.RuleSetProvider)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"JsonNotation(NameMap<?, ? extends BoardShapeFactory>, NameMap<?, ? extends PathPairFactory>, NameMap<?, ? extends DiceFactory<R>>, RuleSetProvider<P, S>, JsonFactory)","u":"%3Cinit%3E(net.royalur.name.NameMap,net.royalur.name.NameMap,net.royalur.name.NameMap,net.royalur.rules.RuleSetProvider,com.fasterxml.jackson.core.JsonFactory)"},{"p":"net.royalur.notation","c":"JsonHelper.JsonReadError","l":"JsonReadError(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper.JsonTypeError","l":"JsonTypeError(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"net.royalur.lut","c":"BigMap.Entry","l":"key"},{"p":"net.royalur.notation","c":"DerivedStateSource","l":"lastIndexOf(GameState<P, S, R>)","u":"lastIndexOf(net.royalur.rules.state.GameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"LATEST_VERSION"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"light"},{"p":"net.royalur.model","c":"PlayerType","l":"LIGHT"},{"p":"net.royalur.stats","c":"GameStatsTarget","l":"LIGHT"},{"p":"net.royalur.model.path","c":"AsebPathPair","l":"LIGHT_PATH"},{"p":"net.royalur.model.path","c":"BellPathPair","l":"LIGHT_PATH"},{"p":"net.royalur.model.path","c":"MastersPathPair","l":"LIGHT_PATH"},{"p":"net.royalur.model.path","c":"MurrayPathPair","l":"LIGHT_PATH"},{"p":"net.royalur.model.path","c":"SkiriukPathPair","l":"LIGHT_PATH"},{"p":"net.royalur.agent","c":"LikelihoodAgent","l":"LikelihoodAgent(SimpleRuleSet<P, S, R>, UtilityFunction, float)","u":"%3Cinit%3E(net.royalur.rules.simple.SimpleRuleSet,net.royalur.agent.utility.UtilityFunction,float)"},{"p":"net.royalur.lut","c":"BigMap","l":"LONG"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"LongArrayBuffer(int)","u":"%3Cinit%3E(int)"},{"p":"net.royalur.lut","c":"StateLUT","l":"loopGameStates(Consumer<FastSimpleGame>)","u":"loopGameStates(java.util.function.Consumer)"},{"p":"net.royalur.lut","c":"StateLUT","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"net.royalur","c":"RGUStatistics","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"net.royalur","c":"Game","l":"makeMove(Move<P>)","u":"makeMove(net.royalur.model.Move)"},{"p":"net.royalur","c":"Game","l":"makeMove(P)"},{"p":"net.royalur","c":"Game","l":"makeMove(Tile)","u":"makeMove(net.royalur.model.Tile)"},{"p":"net.royalur","c":"Game","l":"makeMoveIntroducingPiece()"},{"p":"net.royalur.model.path","c":"PathType","l":"MASTERS"},{"p":"net.royalur.model","c":"GameSettings","l":"MASTERS"},{"p":"net.royalur","c":"GameBuilder","l":"masters()"},{"p":"net.royalur.model.path","c":"MastersPathPair","l":"MastersPathPair()","u":"%3Cinit%3E()"},{"p":"net.royalur.stats","c":"SummaryStat","l":"MAX"},{"p":"net.royalur.notation","c":"JsonHelper","l":"MAX_DOUBLE_READ_EPSILON"},{"p":"net.royalur.notation","c":"JsonHelper","l":"MAX_FLOAT_READ_EPSILON"},{"p":"net.royalur.stats","c":"SummaryStat","l":"MEAN"},{"p":"net.royalur.stats","c":"SummaryStat","l":"MEDIAN"},{"p":"net.royalur.notation","c":"JsonNotation","l":"METADATA_KEY"},{"p":"net.royalur.stats","c":"SummaryStat","l":"MIN"},{"p":"net.royalur.name","c":"NameMap","l":"modifiableCopy()"},{"p":"net.royalur.notation","c":"JsonNotation","l":"MOVE_CAPTURED_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"MOVE_DEST_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"MOVE_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"MOVE_SOURCE_KEY"},{"p":"net.royalur.model","c":"Move","l":"Move(PlayerType, Tile, P, Tile, P, P)","u":"%3Cinit%3E(net.royalur.model.PlayerType,net.royalur.model.Tile,P,net.royalur.model.Tile,P,P)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleMoveList","l":"moveCount"},{"p":"net.royalur.rules.state","c":"MovedGameState","l":"MovedGameState(Board<P>, S, S, PlayerType, R, Move<P>)","u":"%3Cinit%3E(net.royalur.model.Board,S,S,net.royalur.model.PlayerType,R,net.royalur.model.Move)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleMoveList","l":"moves"},{"p":"net.royalur.model.path","c":"PathType","l":"MURRAY"},{"p":"net.royalur.model.path","c":"MurrayPathPair","l":"MurrayPathPair()","u":"%3Cinit%3E()"},{"p":"net.royalur.lut","c":"BigMap.BigMapIterator","l":"next()"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"of(int)"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"ONE"},{"p":"net.royalur.rules.state","c":"OngoingGameState","l":"OngoingGameState(Board<P>, S, S, PlayerType)","u":"%3Cinit%3E(net.royalur.model.Board,S,S,net.royalur.model.PlayerType)"},{"p":"net.royalur.stats","c":"GameStatsTarget","l":"OVERALL"},{"p":"net.royalur.rules.simple.fast","c":"FastSimplePlayer","l":"path"},{"p":"net.royalur.model.path","c":"PathPair","l":"PathPair(Name, List<Tile>, List<Tile>)","u":"%3Cinit%3E(net.royalur.name.Name,java.util.List,java.util.List)"},{"p":"net.royalur.rules","c":"RuleSet","l":"paths"},{"p":"net.royalur.notation","c":"JsonNotation","l":"PATHS_KEY"},{"p":"net.royalur","c":"GameBuilder","l":"paths(PathPair)","u":"paths(net.royalur.model.path.PathPair)"},{"p":"net.royalur","c":"GameBuilder","l":"paths(PathType)","u":"paths(net.royalur.model.path.PathType)"},{"p":"net.royalur.stats","c":"SummaryStat","l":"PERCENTILE_25"},{"p":"net.royalur.stats","c":"SummaryStat","l":"PERCENTILE_5"},{"p":"net.royalur.stats","c":"SummaryStat","l":"PERCENTILE_75"},{"p":"net.royalur.stats","c":"SummaryStat","l":"PERCENTILE_95"},{"p":"net.royalur.notation","c":"JsonNotation","l":"PIECE_INDEX_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"PIECE_OWNER_KEY"},{"p":"net.royalur.model","c":"Piece","l":"Piece(PlayerType, int)","u":"%3Cinit%3E(net.royalur.model.PlayerType,int)"},{"p":"net.royalur.rules","c":"RuleSet","l":"pieceProvider"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"pieces"},{"p":"net.royalur.rules.simple.fast","c":"FastSimplePlayer","l":"pieces"},{"p":"net.royalur.agent.utility","c":"PiecesAdvancedUtilityFn","l":"PiecesAdvancedUtilityFn(RuleSet<Piece, PlayerState, Roll>)","u":"%3Cinit%3E(net.royalur.rules.RuleSet)"},{"p":"net.royalur.rules.state","c":"PlayableGameState","l":"PlayableGameState(Board<P>, S, S, PlayerType)","u":"%3Cinit%3E(net.royalur.model.Board,S,S,net.royalur.model.PlayerType)"},{"p":"net.royalur.agent","c":"Agent","l":"playAutonomously(Game<P, S, R>, Agent<P, S, R>, Agent<P, S, R>)","u":"playAutonomously(net.royalur.Game,net.royalur.agent.Agent,net.royalur.agent.Agent)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"PLAYER_PIECES_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"PLAYER_SCORE_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"PLAYERS_KEY"},{"p":"net.royalur.model","c":"PlayerState","l":"PlayerState(PlayerType, int, int)","u":"%3Cinit%3E(net.royalur.model.PlayerType,int,int)"},{"p":"net.royalur.rules","c":"RuleSet","l":"playerStateProvider"},{"p":"net.royalur.agent","c":"Agent","l":"playTurn(Game<P, S, R>)","u":"playTurn(net.royalur.Game)"},{"p":"net.royalur.agent","c":"BaseAgent","l":"playTurn(Game<P, S, R>)","u":"playTurn(net.royalur.Game)"},{"p":"net.royalur.lut","c":"BigMap","l":"put(int, int)","u":"put(int,int)"},{"p":"net.royalur.lut","c":"BigMap","l":"put(long, long)","u":"put(long,long)"},{"p":"net.royalur.name","c":"NameMap","l":"put(N, V)","u":"put(N,V)"},{"p":"net.royalur.name","c":"UniqueNameMap","l":"put(N, V)","u":"put(N,V)"},{"p":"net.royalur.name","c":"UnmodifiableNameMap","l":"put(N, V)","u":"put(N,V)"},{"p":"net.royalur.model","c":"GameMetadata","l":"put(String, String)","u":"put(java.lang.String,java.lang.String)"},{"p":"net.royalur.agent","c":"RandomAgent","l":"RandomAgent()","u":"%3Cinit%3E()"},{"p":"net.royalur.agent","c":"RandomAgent","l":"RandomAgent(Random)","u":"%3Cinit%3E(java.util.Random)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readActionState(RuleSet<P, S, R>, StateSource<P, S, R>, ObjectNode, String, PlayerType)","u":"readActionState(net.royalur.rules.RuleSet,net.royalur.notation.StateSource,com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readArray(ObjectNode, String)","u":"readArray(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readArrayDictEntry(ArrayNode, int)","u":"readArrayDictEntry(com.fasterxml.jackson.databind.node.ArrayNode,int)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readArrayEntry(ArrayNode, int)","u":"readArrayEntry(com.fasterxml.jackson.databind.node.ArrayNode,int)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readBoard(RuleSet<P, S, R>, ObjectNode)","u":"readBoard(net.royalur.rules.RuleSet,com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readBool(ObjectNode, String)","u":"readBool(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readChar(ObjectNode, String)","u":"readChar(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readDict(ObjectNode, String)","u":"readDict(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readDouble(ObjectNode, String)","u":"readDouble(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readFloat(ObjectNode, String)","u":"readFloat(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readGame(ObjectNode)","u":"readGame(com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readGameSettings(ObjectNode)","u":"readGameSettings(com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readGameV1(ObjectNode)","u":"readGameV1(com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readInitialState(RuleSet<P, S, R>, ObjectNode)","u":"readInitialState(net.royalur.rules.RuleSet,com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readInt(ObjectNode, String)","u":"readInt(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readLong(ObjectNode, String)","u":"readLong(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readMetadata(ObjectNode)","u":"readMetadata(com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readMove(RuleSet<P, S, R>, ObjectNode)","u":"readMove(net.royalur.rules.RuleSet,com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readMovedState(RuleSet<P, S, R>, StateSource<P, S, R>, ObjectNode, PlayerType)","u":"readMovedState(net.royalur.rules.RuleSet,net.royalur.notation.StateSource,com.fasterxml.jackson.databind.node.ObjectNode,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readMoveList(RuleSet<P, S, R>, ArrayNode)","u":"readMoveList(net.royalur.rules.RuleSet,com.fasterxml.jackson.databind.node.ArrayNode)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readNullableArray(ObjectNode, String)","u":"readNullableArray(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readNullableDict(ObjectNode, String)","u":"readNullableDict(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readNullableString(ObjectNode, String)","u":"readNullableString(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readNumber(ObjectNode, String)","u":"readNumber(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readOngoingState(RuleSet<P, S, R>, StateSource<P, S, R>, ObjectNode, String)","u":"readOngoingState(net.royalur.rules.RuleSet,net.royalur.notation.StateSource,com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readPiece(RuleSet<P, S, R>, ObjectNode)","u":"readPiece(net.royalur.rules.RuleSet,com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readPlayableState(RuleSet<P, S, R>, StateSource<P, S, R>, ObjectNode, String, PlayerType)","u":"readPlayableState(net.royalur.rules.RuleSet,net.royalur.notation.StateSource,com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readPlayerState(RuleSet<P, S, R>, PlayerType, ObjectNode)","u":"readPlayerState(net.royalur.rules.RuleSet,net.royalur.model.PlayerType,com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readRoll(RuleSet<P, S, R>, ObjectNode)","u":"readRoll(net.royalur.rules.RuleSet,com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readRolledState(RuleSet<P, S, R>, StateSource<P, S, R>, ObjectNode, PlayerType)","u":"readRolledState(net.royalur.rules.RuleSet,net.royalur.notation.StateSource,com.fasterxml.jackson.databind.node.ObjectNode,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readState(RuleSet<P, S, R>, StateSource<P, S, R>, ObjectNode)","u":"readState(net.royalur.rules.RuleSet,net.royalur.notation.StateSource,com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readStates(RuleSet<P, S, R>, GameState<P, S, R>, ArrayNode)","u":"readStates(net.royalur.rules.RuleSet,net.royalur.rules.state.GameState,com.fasterxml.jackson.databind.node.ArrayNode)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readString(ObjectNode, String)","u":"readString(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonHelper","l":"readValue(ObjectNode, String)","u":"readValue(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readWaitingForMoveState(RuleSet<P, S, R>, StateSource<P, S, R>, ObjectNode, PlayerType)","u":"readWaitingForMoveState(net.royalur.rules.RuleSet,net.royalur.notation.StateSource,com.fasterxml.jackson.databind.node.ObjectNode,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readWaitingForRollState(RuleSet<P, S, R>, StateSource<P, S, R>, ObjectNode, PlayerType)","u":"readWaitingForRollState(net.royalur.rules.RuleSet,net.royalur.notation.StateSource,com.fasterxml.jackson.databind.node.ObjectNode,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"readWinState(RuleSet<P, S, R>, StateSource<P, S, R>, ObjectNode)","u":"readWinState(net.royalur.rules.RuleSet,net.royalur.notation.StateSource,com.fasterxml.jackson.databind.node.ObjectNode)"},{"p":"net.royalur.model.dice","c":"Dice","l":"recordRoll(int)"},{"p":"net.royalur.model","c":"GameMetadata","l":"remove(String)","u":"remove(java.lang.String)"},{"p":"net.royalur","c":"GameBuilder","l":"replaceSettings(GameSettings<NEW_R>)","u":"replaceSettings(net.royalur.model.GameSettings)"},{"p":"net.royalur.notation","c":"RGN","l":"RGN()","u":"%3Cinit%3E()"},{"p":"net.royalur.notation","c":"RGN","l":"RGN(NameMap<?, ? extends PathPairFactory>, NameMap<?, ? extends BoardShapeFactory>, int, int)","u":"%3Cinit%3E(net.royalur.name.NameMap,net.royalur.name.NameMap,int,int)"},{"p":"net.royalur","c":"RGUStatistics","l":"RGUStatistics()","u":"%3Cinit%3E()"},{"p":"net.royalur.notation","c":"JsonNotation","l":"ROLL_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"ROLL_VALUE_KEY"},{"p":"net.royalur.model.dice","c":"Dice","l":"roll()"},{"p":"net.royalur.model.dice","c":"Dice","l":"roll(int)"},{"p":"net.royalur","c":"Game","l":"rollDice()"},{"p":"net.royalur","c":"Game","l":"rollDice(int)"},{"p":"net.royalur","c":"Game","l":"rollDice(R)"},{"p":"net.royalur.rules.state","c":"RolledGameState","l":"RolledGameState(Board<P>, S, S, PlayerType, R, List<Move<P>>)","u":"%3Cinit%3E(net.royalur.model.Board,S,S,net.royalur.model.PlayerType,R,java.util.List)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"rollValue"},{"p":"net.royalur.model.dice","c":"BinaryDice","l":"rollValue()"},{"p":"net.royalur.model.dice","c":"BinaryDice0AsMax","l":"rollValue()"},{"p":"net.royalur.model.dice","c":"Dice","l":"rollValue()"},{"p":"net.royalur.model.shape","c":"AsebBoardShape","l":"ROSETTE_TILES"},{"p":"net.royalur.model.shape","c":"StandardBoardShape","l":"ROSETTE_TILES"},{"p":"net.royalur.notation","c":"JsonNotation","l":"ROSETTES_GRANT_EXTRA_ROLLS_KEY"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"rosettesGrantExtraRoll"},{"p":"net.royalur","c":"GameBuilder","l":"rosettesGrantExtraRolls(boolean)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"rosetteTiles"},{"p":"net.royalur.rules","c":"RuleSet","l":"RuleSet(BoardShape, PathPair, DiceFactory<R>, PieceProvider<P>, PlayerStateProvider<P, S>)","u":"%3Cinit%3E(net.royalur.model.shape.BoardShape,net.royalur.model.path.PathPair,net.royalur.model.dice.DiceFactory,net.royalur.rules.PieceProvider,net.royalur.rules.PlayerStateProvider)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"SAFE_ROSETTES_KEY"},{"p":"net.royalur","c":"GameBuilder","l":"safeRosettes(boolean)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimplePlayer","l":"score"},{"p":"net.royalur.agent.utility","c":"UtilityFunction","l":"scoreGame(FastSimpleGame)","u":"scoreGame(net.royalur.rules.simple.fast.FastSimpleGame)"},{"p":"net.royalur.agent.utility","c":"PiecesAdvancedUtilityFn","l":"scoreGameStateForLight(FastSimpleGame)","u":"scoreGameStateForLight(net.royalur.rules.simple.fast.FastSimpleGame)"},{"p":"net.royalur.agent.utility","c":"UtilityFunction","l":"scoreGameStateForLight(FastSimpleGame)","u":"scoreGameStateForLight(net.royalur.rules.simple.fast.FastSimpleGame)"},{"p":"net.royalur.rules","c":"RuleSet","l":"selectLandmarkStates(List<GameState<P, S, R>>)","u":"selectLandmarkStates(java.util.List)"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"selectLandmarkStates(List<GameState<P, S, R>>)","u":"selectLandmarkStates(java.util.List)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"set(int, byte)","u":"set(int,byte)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"set(int, byte)","u":"set(int,byte)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"set(int, byte)","u":"set(int,byte)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"set(int, byte)","u":"set(int,byte)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"set(int, byte)","u":"set(int,byte)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"set(int, int)","u":"set(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"set(int, int)","u":"set(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"set(int, int)","u":"set(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"set(int, int)","u":"set(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"set(int, int)","u":"set(int,int)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"set(int, int)","u":"set(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"set(int, long)","u":"set(int,long)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"set(int, long)","u":"set(int,long)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"set(int, long)","u":"set(int,long)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"set(int, long)","u":"set(int,long)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"set(int, long)","u":"set(int,long)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"set(int, short)","u":"set(int,short)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"set(int, short)","u":"set(int,short)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"set(int, short)","u":"set(int,short)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"set(int, short)","u":"set(int,short)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"set(int, short)","u":"set(int,short)"},{"p":"net.royalur.model","c":"Board","l":"set(Tile, P)","u":"set(net.royalur.model.Tile,P)"},{"p":"net.royalur.model","c":"Board","l":"setByIndices(int, int, P)","u":"setByIndices(int,int,P)"},{"p":"net.royalur.model","c":"GameMetadata","l":"setEndTime(TemporalAccessor)","u":"setEndTime(java.time.temporal.TemporalAccessor)"},{"p":"net.royalur.model","c":"GameMetadata","l":"setStartTime(TemporalAccessor)","u":"setStartTime(java.time.temporal.TemporalAccessor)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"SETTINGS_KEY"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"shape"},{"p":"net.royalur.lut","c":"BigMap","l":"SHORT"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"ShortArrayBuffer(int)","u":"%3Cinit%3E(int)"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"shouldGrantExtraRoll(MovedGameState<P, S, R>)","u":"shouldGrantExtraRoll(net.royalur.rules.state.MovedGameState)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"shouldGrantRoll(int, int)","u":"shouldGrantRoll(int,int)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimplePlayer","l":"sign"},{"p":"net.royalur.rules.simple","c":"SimplePieceProvider","l":"SimplePieceProvider()","u":"%3Cinit%3E()"},{"p":"net.royalur.rules.simple","c":"SimplePlayerStateProvider","l":"SimplePlayerStateProvider(int)","u":"%3Cinit%3E(int)"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"SimpleRoll(int)","u":"%3Cinit%3E(int)"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSet","l":"SimpleRuleSet(BoardShape, PathPair, DiceFactory<R>, PieceProvider<P>, PlayerStateProvider<P, S>, boolean, boolean, boolean)","u":"%3Cinit%3E(net.royalur.model.shape.BoardShape,net.royalur.model.path.PathPair,net.royalur.model.dice.DiceFactory,net.royalur.rules.PieceProvider,net.royalur.rules.PlayerStateProvider,boolean,boolean,boolean)"},{"p":"net.royalur.rules.simple","c":"SimpleRuleSetProvider","l":"SimpleRuleSetProvider()","u":"%3Cinit%3E()"},{"p":"net.royalur.model.path","c":"PathType","l":"SKIRIUK"},{"p":"net.royalur.model.path","c":"SkiriukPathPair","l":"SkiriukPathPair()","u":"%3Cinit%3E()"},{"p":"net.royalur.lut","c":"BigMap","l":"sort()"},{"p":"net.royalur.model.shape","c":"BoardType","l":"STANDARD"},{"p":"net.royalur.model.shape","c":"StandardBoardShape","l":"StandardBoardShape()","u":"%3Cinit%3E()"},{"p":"net.royalur.model","c":"GameMetadata","l":"START_DATETIME_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"STARTING_PIECE_COUNT_KEY"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleGame","l":"startingPieceCount"},{"p":"net.royalur","c":"GameBuilder","l":"startingPieceCount(int)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"STATE_TYPE_KEY"},{"p":"net.royalur.notation","c":"JsonNotation","l":"STATE_TYPE_MOVED"},{"p":"net.royalur.notation","c":"JsonNotation","l":"STATE_TYPE_ROLLED"},{"p":"net.royalur.notation","c":"JsonNotation","l":"STATE_TYPE_WAITING_FOR_MOVE"},{"p":"net.royalur.notation","c":"JsonNotation","l":"STATE_TYPE_WAITING_FOR_ROLL"},{"p":"net.royalur.notation","c":"JsonNotation","l":"STATE_TYPE_WIN"},{"p":"net.royalur.lut","c":"StateLUT","l":"StateLUT(GameSettings<?>)","u":"%3Cinit%3E(net.royalur.model.GameSettings)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"STATES_KEY"},{"p":"net.royalur.notation","c":"StateSource","l":"StateSource()","u":"%3Cinit%3E()"},{"p":"net.royalur.stats","c":"SummaryStat","l":"STD_DEV"},{"p":"net.royalur.model","c":"Tile","l":"stepTowards(Tile)","u":"stepTowards(net.royalur.model.Tile)"},{"p":"net.royalur.stats","c":"SummaryStat","l":"SUM"},{"p":"net.royalur.stats","c":"GameStats","l":"summarise(GameStats...)","u":"summarise(net.royalur.stats.GameStats...)"},{"p":"net.royalur.stats","c":"GameStatsSummary","l":"summarise(GameStats...)","u":"summarise(net.royalur.stats.GameStats...)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ByteArrayBuffer","l":"swap(int, int)","u":"swap(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.IntArrayBuffer","l":"swap(int, int)","u":"swap(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.LongArrayBuffer","l":"swap(int, int)","u":"swap(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer.ShortArrayBuffer","l":"swap(int, int)","u":"swap(int,int)"},{"p":"net.royalur.lut","c":"ArrayBuffer","l":"swap(int, int)","u":"swap(int,int)"},{"p":"net.royalur","c":"RGUStatistics","l":"testAgentActions(Function<SimpleRuleSet<Piece, PlayerState, Roll>, Agent<Piece, PlayerState, Roll>>, Function<SimpleRuleSet<Piece, PlayerState, Roll>, Agent<Piece, PlayerState, Roll>>, int, GameStatsTarget[])","u":"testAgentActions(java.util.function.Function,java.util.function.Function,int,net.royalur.stats.GameStatsTarget[])"},{"p":"net.royalur.name","c":"TextName","l":"TextName(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"THREE"},{"p":"net.royalur.model.dice","c":"DiceType","l":"THREE_BINARY_0MAX"},{"p":"net.royalur.model","c":"Tile","l":"Tile(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"net.royalur.model","c":"Piece","l":"toChar(Piece)","u":"toChar(net.royalur.model.Piece)"},{"p":"net.royalur.model","c":"PlayerType","l":"toChar(PlayerType)","u":"toChar(net.royalur.model.PlayerType)"},{"p":"net.royalur.model","c":"Board","l":"toString()"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"toString()"},{"p":"net.royalur.model","c":"GameMetadata","l":"toString()"},{"p":"net.royalur.model","c":"Piece","l":"toString()"},{"p":"net.royalur.model","c":"PlayerState","l":"toString()"},{"p":"net.royalur.model","c":"Tile","l":"toString()"},{"p":"net.royalur.model","c":"Board","l":"toString(String, boolean)","u":"toString(java.lang.String,boolean)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"TURN_KEY"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"TWO"},{"p":"net.royalur.model","c":"Tile","l":"unionLists(Collection<Tile>...)","u":"unionLists(java.util.Collection...)"},{"p":"net.royalur.name","c":"UniqueNameMap","l":"UniqueNameMap()","u":"%3Cinit%3E()"},{"p":"net.royalur.name","c":"UniqueNameMap","l":"UniqueNameMap(NameMap<N, V>)","u":"%3Cinit%3E(net.royalur.name.NameMap)"},{"p":"net.royalur.name","c":"NameMap","l":"unmodifiableCopy()"},{"p":"net.royalur.name","c":"UnmodifiableNameMap","l":"UnmodifiableNameMap(NameMap<N, V>)","u":"%3Cinit%3E(net.royalur.name.NameMap)"},{"p":"net.royalur.util","c":"Cast","l":"unsafeCast(F)"},{"p":"net.royalur.agent.utility","c":"UtilityFunction","l":"UtilityFunction(Name)","u":"%3Cinit%3E(net.royalur.name.Name)"},{"p":"net.royalur.lut","c":"BigMap.Entry","l":"value"},{"p":"net.royalur.model.dice","c":"Roll","l":"value()"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"value()"},{"p":"net.royalur.model.dice","c":"DiceType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"net.royalur.model.path","c":"PathType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"net.royalur.model","c":"PlayerType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"net.royalur.model.shape","c":"BoardType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"net.royalur.stats","c":"GameStatsTarget","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"net.royalur.stats","c":"SummaryStat","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"net.royalur.model.dice","c":"DiceType","l":"values()"},{"p":"net.royalur.model.path","c":"PathType","l":"values()"},{"p":"net.royalur.model","c":"PlayerType","l":"values()"},{"p":"net.royalur.model.shape","c":"BoardType","l":"values()"},{"p":"net.royalur.stats","c":"GameStatsTarget","l":"values()"},{"p":"net.royalur.stats","c":"SummaryStat","l":"values()"},{"p":"net.royalur.stats","c":"SummaryStat","l":"VARIANCE"},{"p":"net.royalur.notation","c":"JsonNotation","l":"VERSION_KEY"},{"p":"net.royalur.rules.state","c":"WaitingForMoveGameState","l":"WaitingForMoveGameState(Board<P>, S, S, PlayerType, R, List<Move<P>>)","u":"%3Cinit%3E(net.royalur.model.Board,S,S,net.royalur.model.PlayerType,R,java.util.List)"},{"p":"net.royalur.rules.state","c":"WaitingForRollGameState","l":"WaitingForRollGameState(Board<P>, S, S, PlayerType)","u":"%3Cinit%3E(net.royalur.model.Board,S,S,net.royalur.model.PlayerType)"},{"p":"net.royalur.rules.simple.fast","c":"FastSimpleBoard","l":"width"},{"p":"net.royalur.rules.state","c":"WinGameState","l":"WinGameState(Board<P>, S, S, PlayerType)","u":"%3Cinit%3E(net.royalur.model.Board,S,S,net.royalur.model.PlayerType)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"WINNER_KEY"},{"p":"net.royalur.model","c":"GameSettings","l":"withBoardShape(BoardShape)","u":"withBoardShape(net.royalur.model.shape.BoardShape)"},{"p":"net.royalur.model","c":"GameSettings","l":"withBoardShape(BoardShapeFactory)","u":"withBoardShape(net.royalur.model.shape.BoardShapeFactory)"},{"p":"net.royalur.model","c":"GameSettings","l":"withCapturesGrantExtraRolls(boolean)"},{"p":"net.royalur.model","c":"GameSettings","l":"withDice(DiceFactory<NEW_R>)","u":"withDice(net.royalur.model.dice.DiceFactory)"},{"p":"net.royalur.model","c":"GameSettings","l":"withPaths(PathPair)","u":"withPaths(net.royalur.model.path.PathPair)"},{"p":"net.royalur.model","c":"GameSettings","l":"withPaths(PathPairFactory)","u":"withPaths(net.royalur.model.path.PathPairFactory)"},{"p":"net.royalur.model","c":"GameSettings","l":"withRosettesGrantExtraRolls(boolean)"},{"p":"net.royalur.model","c":"GameSettings","l":"withSafeRosettes(boolean)"},{"p":"net.royalur.model","c":"GameSettings","l":"withStartingPieceCount(int)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeActionState(JsonGenerator, ActionGameState<P, S, R>)","u":"writeActionState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.ActionGameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeBoard(JsonGenerator, Board<P>)","u":"writeBoard(com.fasterxml.jackson.core.JsonGenerator,net.royalur.model.Board)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeGame(JsonGenerator, Game<P, S, R>)","u":"writeGame(com.fasterxml.jackson.core.JsonGenerator,net.royalur.Game)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeGameSettings(JsonGenerator, GameSettings<R>)","u":"writeGameSettings(com.fasterxml.jackson.core.JsonGenerator,net.royalur.model.GameSettings)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeInitialState(JsonGenerator, GameState<P, S, R>)","u":"writeInitialState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.GameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeMetadata(JsonGenerator, GameMetadata)","u":"writeMetadata(com.fasterxml.jackson.core.JsonGenerator,net.royalur.model.GameMetadata)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeMove(JsonGenerator, Move<P>)","u":"writeMove(com.fasterxml.jackson.core.JsonGenerator,net.royalur.model.Move)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeMovedState(JsonGenerator, MovedGameState<P, S, R>)","u":"writeMovedState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.MovedGameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeMoveList(JsonGenerator, List<Move<P>>)","u":"writeMoveList(com.fasterxml.jackson.core.JsonGenerator,java.util.List)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeOngoingState(JsonGenerator, OngoingGameState<P, S, R>)","u":"writeOngoingState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.OngoingGameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writePiece(JsonGenerator, P)","u":"writePiece(com.fasterxml.jackson.core.JsonGenerator,P)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writePieceField(JsonGenerator, String, P)","u":"writePieceField(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,P)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writePlayableState(JsonGenerator, PlayableGameState<P, S, R>)","u":"writePlayableState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.PlayableGameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writePlayerState(JsonGenerator, S)","u":"writePlayerState(com.fasterxml.jackson.core.JsonGenerator,S)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeRoll(JsonGenerator, R)","u":"writeRoll(com.fasterxml.jackson.core.JsonGenerator,R)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeRolledState(JsonGenerator, RolledGameState<P, S, R>)","u":"writeRolledState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.RolledGameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeState(JsonGenerator, GameState<P, S, R>)","u":"writeState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.GameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeStates(JsonGenerator, List<GameState<P, S, R>>)","u":"writeStates(com.fasterxml.jackson.core.JsonGenerator,java.util.List)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeWaitingForMoveState(JsonGenerator, WaitingForMoveGameState<P, S, R>)","u":"writeWaitingForMoveState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.WaitingForMoveGameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeWaitingForRollState(JsonGenerator, WaitingForRollGameState<P, S, R>)","u":"writeWaitingForRollState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.WaitingForRollGameState)"},{"p":"net.royalur.notation","c":"JsonNotation","l":"writeWinState(JsonGenerator, WinGameState<P, S, R>)","u":"writeWinState(com.fasterxml.jackson.core.JsonGenerator,net.royalur.rules.state.WinGameState)"},{"p":"net.royalur.model.dice","c":"SimpleRoll","l":"ZERO"}];updateSearchResults();